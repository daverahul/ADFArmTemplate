{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "gdsdatafactorydemo"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureDataLakeStoragetemp_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStoragetemp'"
		},
		"Snowflaketemp_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Snowflaketemp'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gdsstorage2024aug.dfs.core.windows.net/"
		},
		"AzureDataLakeStoragetemp_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azuredatafactorygds.dfs.core.windows.net/"
		},
		"Snowflaketemp_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SALES_MART"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourcesales": {},
									"sink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflaketemp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "YEAR_ID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "MONTH_ID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "TOTALSALES",
						"type": "NUMBER",
						"precision": 18,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "SALESAGGREGATE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflaketemp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sourcetemp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStoragetemp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sales_data.csv",
						"fileSystem": "adftemp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ORDERNUMBER",
						"type": "String"
					},
					{
						"name": "QUANTITYORDERED",
						"type": "String"
					},
					{
						"name": "PRICEEACH",
						"type": "String"
					},
					{
						"name": "ORDERLINENUMBER",
						"type": "String"
					},
					{
						"name": "SALES",
						"type": "String"
					},
					{
						"name": "ORDERDATE",
						"type": "String"
					},
					{
						"name": "STATUS",
						"type": "String"
					},
					{
						"name": "QTR_ID",
						"type": "String"
					},
					{
						"name": "MONTH_ID",
						"type": "String"
					},
					{
						"name": "YEAR_ID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStoragetemp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStoragetemp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStoragetemp_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStoragetemp_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflaketemp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "yrhskgr-vs89802",
					"user": "sagarmisal913",
					"database": "[parameters('Snowflaketemp_properties_typeProperties_database')]",
					"warehouse": "COMPUTE_WH",
					"role": "ACCOUNTADMIN",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Snowflaketemp_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "sourcetemp",
								"type": "DatasetReference"
							},
							"name": "sourcesales"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SnowflakeTable1",
								"type": "DatasetReference"
							},
							"name": "sink"
						}
					],
					"transformations": [
						{
							"name": "filter1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ORDERNUMBER as short,",
						"          QUANTITYORDERED as short,",
						"          PRICEEACH as double,",
						"          ORDERLINENUMBER as short,",
						"          SALES as double,",
						"          ORDERDATE as timestamp,",
						"          STATUS as string,",
						"          QTR_ID as short,",
						"          MONTH_ID as short,",
						"          YEAR_ID as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourcesales",
						"sourcesales filter(SALES >= 2000) ~> filter1",
						"filter1 aggregate(groupBy(YEAR_ID,",
						"          MONTH_ID),",
						"     TotalSales = sum(SALES)) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: false,",
						"     validateSchema: true,",
						"     input(",
						"          YEAR_ID as string,",
						"          MONTH_ID as string,",
						"          TOTALSALES as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true,",
						"     mapColumn(",
						"          YEAR_ID,",
						"          MONTH_ID,",
						"          TOTALSALES = TotalSales",
						"     )) ~> sink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sourcetemp')]",
				"[concat(variables('factoryId'), '/datasets/SnowflakeTable1')]"
			]
		}
	]
}